node {

//  deleteDir()

 properties([
   parameters([
     string(name: 'target_host', defaultValue: '', description: 'Insert hostname'),
     choice(name: 'env',  choices:'dev\nstage\nprod-ams\nprod-rot', description: 'Select Environment'),
     choice(name: 'sip_service', choices: 'False\nTrue', description: 'Sip interface is present'),
     password(name: 'ansible_sudo_pass', defaultValue: '', description: 'Input passwd for sudo user')
     ])
   ])

 stage('Checkout') {
   checkout([$class: 'GitSCM',
       branches: [[name: '*/master']],
       doGenerateSubmoduleConfigurations: false,
       extensions: [],
       submoduleCfg: [],
       userRemoteConfigs: [[credentialsId: 'git_kravchenko', url: 'git@10.60.28.143:playbook-rabbitmq.git']]
       ])
 }

 stage('Prepare Ansible Environment') {
   sshagent(['jendep']) {
     sh 'git submodule update --init'
     sh 'git submodule update --remote'
    }
   sshagent(['git_kravchenko']) {
     sh 'ansible-galaxy install -r requirements.yml'
   }
 }
 stage('Create Inventory file') {
   sh 'echo -e "[singlehost]\n"$target_host > environments/$env/singlehost'
 }
 stage('Setting common parameters') {
   wrap([$class: 'AnsiColorBuildWrapper', colorMapName: "xterm"]) {
     ansiblePlaybook(
        playbook:    'rabbitmq.yml',
        inventory:   'environments/$env/singlehost',
        credentialsId: 'sudo_user',
        sudo: true,
        colorized:   true,
        extraVars: [
           ansible_sudo_pass: [value: "$ansible_sudo_pass", hidden: true] ,
           target_host: "$target_host",
           env: "$env"

       ]
     )
   }
 }
}
